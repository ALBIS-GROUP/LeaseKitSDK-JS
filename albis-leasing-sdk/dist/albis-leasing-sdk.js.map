{"version":3,"sources":["webpack://albis-leasing-sdk/webpack/universalModuleDefinition","webpack://albis-leasing-sdk/webpack/bootstrap","webpack://albis-leasing-sdk/./src/helpers.js","webpack://albis-leasing-sdk/./src/index.js","webpack://albis-leasing-sdk/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\",\"amd\":\"axios\",\"root\":\"axios\"}","webpack://albis-leasing-sdk/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACH;AACiB;;AAEjC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,6CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ,sCAAsC,EAAE;;AAE5E;AACA,SAAS,4CAAK;AACd,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,iCAAiC,qDAAO;;AAExC;AACA;AACA,G;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA,0BAA0B,YAAY,GAAG,SAAS;;AAElD,YAAY,YAAY,GAAG,SAAS,GAAG,SAAS;AAChD;;;;;;;;;;;;;ACvHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACH;AACyC;;AAEhE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,yDAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,yDAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,eAAe,kBAAkB;AACjC;AACA;AACA,sBAAsB,gBAAgB;AACtC;;AAEA;AACA,qBAAqB,gEAAe;AACpC;AACA;AACA,kBAAkB,4CAAK;AACvB;AACA;AACA,qCAAqC,iBAAiB;AACtD,SAAS;AACT,OAAO;AACP,KAAK;AACL,YAAY,yDAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB;AACA,cAAc,kBAAkB;AAChC;AACA;AACA,oCAAoC,gBAAgB;AACpD;;AAEA;AACA,mBAAmB,gEAAe;AAClC;AACA;AACA,gBAAgB,4CAAK;AACrB;AACA;AACA,mCAAmC,iBAAiB;AACpD,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH,UAAU,yDAAQ;AAClB;AACA;AACA;;AAEA;AACA;AACA,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AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,eAAe;AACrB;;AAEA;AACA,qBAAqB,gEAAe;AACpC;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA,kBAAkB,4CAAK;AACvB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA,OAAO;AACP,KAAK;AACL,YAAY,yDAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,MAAM,iBAAiB;AACvB;;AAEA;AACA,qBAAqB,gEAAe;AACpC;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA,kBAAkB,4CAAK;AACvB,SAAS;AACT,iCAAiC;AACjC;AACA;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA,OAAO;AACP,KAAK;AACL,YAAY,yDAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,eAAe,wBAAwB;AACvC;AACA;AACA,mCAAmC,iB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","file":"albis-leasing-sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"), require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"axios\", \"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"albis-leasing-sdk\"] = factory(require(\"axios\"), require(\"lodash\"));\n\telse\n\t\troot[\"albis-leasing-sdk\"] = factory(root[\"axios\"], root[\"_\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_axios__, __WEBPACK_EXTERNAL_MODULE_lodash__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import axios from 'axios';\nimport _ from 'lodash';\nimport {version} from '../package.json';\n\nexport function errorObj(err) {\n  if (!err.response) {\n    return {\n      status: 'Error from LeaseKit lib',\n      statusText: err,\n    }\n  }\n  return {\n    status: err.response.status,\n    statusText: err.response.statusText,\n    headers: err.response.headers,\n    data: err.response.data\n  }\n}\n\nexport async function getToken(\n  SDKendpoint,\n  apiStage,\n  username,\n  password,\n  auth0Username,\n  auth0Password,\n  realm,\n  nodeEnv\n) {\n  let localStorageToken = \"{}\"\n  if (!(typeof window === 'undefined')) {\n    localStorageToken = localStorage.getItem('albisToken')\n  }\n  let albisToken = JSON.parse(localStorageToken)\n  const date = new Date();\n  if (\n    (_.isEmpty(albisToken) || albisToken.expires < new Date()) &&\n    nodeEnv !== 'test'\n  ) {\n    let token = {};\n    try {\n      token = await login(\n        SDKendpoint,\n        apiStage,\n        username,\n        password,\n        auth0Username,\n        auth0Password,\n        realm,\n        nodeEnv\n      );\n    } catch (err) {\n      throw err;\n    }\n    albisToken = {\n      token: token.data.access_token,\n      scope: token.data.scope,\n      token_type: token.data.token_type,\n      expires_in_Auth0: token.data.expires_in,\n      expires: date.setHours(date.getHours() + token.data.expires_in / 3600),\n    };\n    if (!(typeof window === 'undefined')) {\n      localStorage.setItem('albisToken', JSON.stringify(albisToken));\n    }\n    return albisToken;\n  }\n\n  return albisToken;\n}\n\nexport async function login(\n  SDKendpoint,\n  apiStage,\n  username,\n  password,\n  auth0Username,\n  auth0Password,\n  realm,\n  nodeEnv\n) {\n  if (nodeEnv === 'test')\n    return Promise.resolve({ data: { access_token: 'testAuth0Token12345' } });\n\n  const endpoint = getEndpointPath('token', apiStage, SDKendpoint, nodeEnv);\n  return axios.post(endpoint, {\n    headers: { 'content-type': 'application/json' },\n    username,\n    password,\n    auth0Username,\n    auth0Password,\n    realm,\n  });\n}\n\nfunction versionCheck (apiStage) {\n  if(!apiStage) return \n  const stageValidator = RegExp(/^v[1-9]+$|^staging$/);\n  const validateStage = stageValidator.test(apiStage);\n  \n  const stageNumber = parseInt(apiStage.slice(1, apiStage.length), 10) || \"staging\";\n\n  const versionNumber = parseInt(version, 10);\n\n  if (!validateStage) {\n    throw ('API stage not valid');\n  } \n  if (!(stageNumber === \"staging\" || stageNumber === versionNumber)){\n    throw ('Package version does not match API version')\n  }\n}\n\nexport function getEndpointPath(resource, apiStage, SDKendpoint, nodeEnv) {\n  versionCheck(apiStage);\n  if (resource === 'rate' && nodeEnv === 'test')\n    return `http://localhost:3000/testModels/rates.json`;\n\n  if(!apiStage) return `${SDKendpoint}/${resource}`;\n\n  return `${SDKendpoint}/${apiStage}/${resource}`;\n}\n","import axios from 'axios';\nimport _ from 'lodash';\nimport { getEndpointPath, getToken, errorObj } from './helpers';\n\n// run:\n// jsdoc -d ../public/doc/ src/index.js to create a documentation for this file\n// OR if .md file needed\n// jsdoc2md src/index.js  > yourFile.md to create a .md version of documentation (for GitHub)\n\n/**\n * An Albis class\n */\n\nclass Albis {\n  /**\n   * Create an Albis object\n   * Note: due to security reasons, keep all sensitive data (i.e. APIid, APIsecret, username, ...)\n   * @param {Object} settings\n   * @param {string} settings.username - shop owner or shop admins Albis username\n   * @param {string} settings.password - shop owner or shop admins Albis password\n   * @param {string} settings.auth0Username - shop owner or shop admins auth0 username\n   * @param {string} settings.auth0Password - shop owner or shop admin auth0 password\n   * @param {string} settings.realm - shop owner connection name\n   * @param {number} settings.provision - provision - defines how much commission, retailer wants to receives for each deal. Possible values min: 0, max: 5. Default 0. Value in half percentage i.e. 1.5 not 1.65\n   * @param {string} settings.SDKendpoint - SDK endpoint\n   * @param {boolean=} settings.apiStage - defines proper API Gateway endpoints stage (API version) for requests (optional)\n   *\n   * @example\n   *\n   * new Albis(\n   *  {\n   *    username: 'username',\n   *    password: 'password',\n   *    auth0Username: 'auth0Username',\n   *    auth0Password: 'auth0Password',\n   *    realm: 'shop',\n   *    provision: 3,\n   *    SDKendpoint: 'https://sdkEndpoint',\n   *    apiStage: 'staging',\n   *  })\n   */\n\n  constructor(settings) {\n    this.username = settings.username;\n    this.password = settings.password;\n    this.auth0Username = settings.auth0Username;\n    this.auth0Password = settings.auth0Password;\n    this.realm = settings.realm;\n    this.provision = settings.provision;\n    this.SDKendpoint = settings.SDKendpoint;\n    this.apiStage = settings.apiStage;\n  }\n  \n  /**\n   * getAlbisToken() returns albisToken needed to call other Albis functions\n   * \n   * @returns {ResponseGetAlbisToken} response object\n   *\n   * @example\n   * Albis.getAlbisToken()\n   */\n\n   async getAlbisToken() {\n    let albisToken = \"\"\n    try {\n      albisToken = await getToken(\n        this.SDKendpoint,\n        this.apiStage,\n        this.username,\n        this.password,\n        this.auth0Username,\n        this.auth0Password,\n        this.realm,\n      );\n    } catch (e) {\n      throw errorObj(e)\n    }\n    return albisToken\n   }\n\n  /**\n   * albisPing(albisToken) checks the connection with Albis API and shop credentials\n   * \n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseAlbisPing} response object\n   *\n   * @example\n   * Albis.albisPing({ token: '1234' })\n   */\n\n  async albisPing(albisToken) {\n    const endpoint = getEndpointPath('ping', this.apiStage, this.SDKendpoint);\n    let res = {}\n    try {\n      res = await axios.get(endpoint, {\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n    return res.data\n  }\n\n  /**\n  * albisEcho(data, albisToken)\n  * @param {string=} data - random string (optional)\n  * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n  * \n  * @returns {ResponseAlbisEcho} response object\n  * \n  * @example\n  * Albis.albisEcho(\"Hello World\", { token: '1234' })\n  */\n\n async albisEcho(data, albisToken) {\n  const endpoint = getEndpointPath('echo', this.apiStage, this.SDKendpoint);\n  let res = {}\n  try {\n    res = await axios.get(endpoint, {\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${albisToken.token}`,\n      },\n      params: {\n        data \n      }\n    })\n  } catch (e) {\n    throw errorObj(e)\n  }\n  return res.data\n}\n\n/**\n * getContractDocuments(applicationId, albisToken) returns needed documents. Warning: this function needs sometimes (rare) even up to 2mins for response\n * @param {number} applicationId - application number\n * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n * \n * @returns {ResponseGetContractDocuments} response object\n * \n * @example \n * \n * Albis.getContractDocuments(123456, { token: 12345 })\n */\n\nasync getContractDocuments(applicationId, albisToken) {\n  const endpoint = getEndpointPath('contract-documents', this.apiStage, this.SDKendpoint);\n  let res = {}\n  try {\n    res = await axios.get(endpoint, {\n      headers: { \n        'content-type': 'application/json',\n        'Authorization': `Bearer ${albisToken.token}`,\n      },\n      params: {\n        applicationId,\n      },\n    });\n  } catch (e) {\n    throw errorObj(e)\n  }\n  return res.data\n}\n\n/**\n * changePassword(albisNewPassword, auth0NewPassword, albisToken)\n * \n * @param {string=} albisNewPassword - albis new password (optional)\n * @param {string=} auth0NewPassword - auth0 new password (optional)\n * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API \n * \n * @returns {ResponseChangePassword} response object\n * \n * @example \n * Albis.changePassword(\"albisNewPassword\", \"auth0NewPassword\", { token: 12345 })\n */\n\nasync changePassword(albisNewPassword, auth0NewPassword, albisToken) {\n  const endpoint = getEndpointPath('password', this.apiStage, this.SDKendpoint);\n  let res = {}\n  try {\n    res = await axios.post(endpoint,\n      {\n        albisNewPassword,\n        auth0NewPassword\n      }, \n      {\n        headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${albisToken.token}`,\n       }\n    })\n  } catch(e) {\n    throw errorObj(e)\n  }\n  return res.data\n}\n\n  /**\n   * getRates(values, albisToken) retrieves proposed rates. Returned object is needed for proceed saveApplication or updateApplication\n   *\n   * @param {Object} values - An object with data for providing rate offers\n   * @param {number} values.purchasePrice - Total net value of the cart [EUR]\n   * @param {number} values.productGroup - Product group of chosen products\n   * @param {number=} values.downPayment - Net value of down payment [EUR]. Default 0 (optional)\n   * @param {number} values.contractType - Contract type\n   * @param {number} values.paymentMethod - Payment options\n   * @param {number=} values.residualValuePercent - Residual value percent (mandatory if contract type equals 11 (TA))\n   * @param {number=} values.serviceFee - service fee (mandatory if contract type equals 7 or 12)\n   * @param {number=} values.cntbw - amount of black-white pages. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.costbw - cost of black-white pages per page. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.cntclr - amount of colour pages. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.costclr - cost of colour pages per page. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.cntscan - amount of scanned pages. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.costscan - cost of scanned pages per page. Used if service/printers contract type (7 or 12)\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseGetRates} response object\n   *\n   * @example\n   *\n   * Albis.getRates({ purchasePrice: 5000, productGroup: 1, downPayment: 500, contractType: 1, paymentMethod: 1 }, { token: '12345' })\n   */\n\n  async getRates(values, albisToken) {\n    let res = {};\n    const endpoint = getEndpointPath('rate', this.apiStage, this.SDKendpoint);\n\n    try {\n      res = await axios.get(endpoint, {\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n        params: {\n          ...values,\n          provision: this.provision,\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n\n    return res.data;\n  }\n\n  /**\n   * getFrameRates(values, albisToken) retrieves proposed rates for frame application. Returned object is needed for proceed saveApplication or updateApplication\n   *\n   * @param {Object} values - An object with data for providing rate offers\n   * @param {number} values.purchasePrice - Total net value of the cart [EUR]\n   * @param {number} values.productGroup - Product group of chosen products\n   * @param {number=} values.downPayment - Net value of down payment [EUR]. Default 0 (optional)\n   * @param {number} values.contractType - Contract type\n   * @param {number} values.paymentMethod - Payment options\n   * @param {number=} values.residualValueSum - Residual value sum (mandatory if contract type equals 11 (TA))\n   * @param {number=} values.residualValuePercent - Residual value percent (mandatory if contract type equals 11 (TA))\n   * @param {number=} values.serviceFee - service fee (mandatory if contract type equals 7 or 12)\n   * @param {number=} values.cntbw - amount of black-white pages. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.costbw - cost of black-white pages per page. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.cntclr - amount of colour pages. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.costclr - cost of colour pages per page. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.cntscan - amount of scanned pages. Used if service/printers contract type (7 or 12)\n   * @param {number=} values.costscan - cost of scanned pages per page. Used if service/printers contract type (7 or 12)\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseGetFrameRates} response object\n   *\n   * @example\n   *\n   * Albis.getFrameRates({ purchasePrice: 5000, productGroup: 1, downPayment: 500, contractType: 1, paymentMethod: 1 }, { token: '12345' })\n  */\n\n    async getFrameRates(values, albisToken) {\n    let res = {};\n    const endpoint = getEndpointPath('frame-rates', this.apiStage, this.SDKendpoint);\n\n    try {\n      res = await axios.get(endpoint, {\n        headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n        params: {\n          ...values,\n          provision: this.provision,\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n\n    return res.data;\n  }\n\n  /**\n   * saveApplication(values, albisToken) saves an application\n   * \n   * @param {Object} values - An object with application data\n   * @param {boolean=} values.contactByEmail - indicator that the leasing contract should be sent to the lessee by e-mail after approval. TRUE/FALSE, Default:FALSE (optional)\n   * @param {number} values.contractType - contract type (result of getContractTypes() method)\n   * @param {number=} values.downPayment - down payment (optional)\n   * @param {string=} values.iban - IBAN of account to be charged with contract instalments (may be entered with spaces) (optional)\n   * @param {Object} values.lessee - lessee data\n   * @param {string} values.lessee.city - lessee city\n   * @param {string} values.lessee.email - lessee email\n   * @param {number} values.lessee.legalForm - lessee legal form\n   * @param {string} values.lessee.name - lessee name\n   * @param {string} values.lessee.phoneNumber - lessee phone number\n   * @param {string} values.lessee.street - lessee street\n   * @param {string} values.lessee.zipCode - lessee zip code\n   * @param {Object} values.lessee.manager - lessee's manager data\n   * @param {string} values.lessee.manager.birthDate - lessee's manager birth date (format required: \"YYYY-MM-DD\")\n   * @param {string} values.lessee.manager.city - lessee's manager city\n   * @param {string=} values.lessee.manager.faxNumber - lessee's manager phone number (optional)\n   * @param {string} values.lessee.manager.firstName - lessee's manager first name\n   * @param {string} values.lessee.manager.lastName - lessee's manager last name\n   * @param {string=} values.lessee.manager.phoneNumber - lessee's manager phone number (optional)\n   * @param {number} values.lessee.manager.salutation - lessee's manager salutation form (result of getSalutations() method)\n   * @param {string} values.lessee.manager.street - lessee's manager street\n   * @param {string} values.lessee.manager.zipCode - lessee's manager zip code\n   * @param {number} values.leaseTerm - lease term (returned from getRates() method)\n   * @param {string} values.object - name of the object (80 char max)\n   * @param {number} values.paymentMethod - payment method (result of getPaymentMethods() method)\n   * @param {number} values.productGroup - product group (is a part of \"credentials\". Can be assigned by Albis only)\n   * @param {string=} values.promotionId - lease term (returned from getRates() if conditions matched any promotion) (optional)\n   * @param {number} values.purchasePrice - purchase price (object value)\n   * @param {number} values.rate - rate (returned from getRates() method)\n   * @param {string=} values.reference - application reference (helper for shop employees) (optional)\n   * @param {string=} values.receiverEndpoint - endpoint address where requests about application/documentation updates should be delivered (optional)\n   * @param {Array.<String>=} values.receiverFailEmails - array of string emails where info about connection with reveiver endpoint should be delivered (optional)\n   * @param {string=} values.receiverToken - a string, which can be used by a client to ensure that the notification concerns his application (optional)\n   * @param {number=} values.residualValuePercent - required if contract type equals 11 (optional)\n   * @param {number=} values.serviceFee - required if contract type equals 7 or 12 (optional)\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with SDK API (returned from getAlbisToken() method)\n   *\n   * @returns {ResponseSaveApplication} response - response object\n   *\n   * @example\n   *\n   * Albis.saveApplication(\n   *  {\n   *    contactByEmail: true,\n   *    contractType: 1,\n   *    downPayment: 500,\n   *    finalPayment: 150,\n   *    iban: 'DE88100900001234567892',\n   *    lessee: {\n   *      name: 'Antonina',\n   *      street: 'Lichtenrade',\n   *      city: 'Berlin',\n   *      zipCode: '50000',\n   *      phoneNumber: '+48500000000',\n   *      email: 'abc@gmail.com',\n   *      legalForm: 1,\n   *      manager: {\n   *        salutation: 1,\n   *        firstName: 'Johanna',\n   *        lastName: 'Surname',\n   *        street: 'Piłsudskiego',\n   *        zipCode: '50000',\n   *        city: 'Hamburg',\n   *        birthDate: '1990-12-30'\n   *      },\n   *    },\n   *    leaseTerm: 12,\n   *    object: 'Fridge VW',\n   *    paymentMethod: 1,\n   *    productGroup: 1,\n   *    promotionId: 'xyz',\n   *    purchasePrice: 5000,\n   *    rate: 300,\n   *    rateWithInsurance: 323,\n   *    reference: 'abc123',\n   *    ssv: true,\n   *    receiverToken: '123abc',\n   *    receiverEndpoint: 'company.com/endpoint',\n   *    receiverFailEmails: ['abc@gmail.com', 'abc2@gmail.com']\n   * },\n   * {token: '12345'})\n   */\n\n  async saveApplication(values, albisToken) {\n    const endpoint = getEndpointPath('application', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    if (values.object.length > 80) {\n      values = {...values, object: values.object.substring(0,77) + \"...\" }\n    }\n    try {\n      res = await axios.post(endpoint,\n        {\n          ...values, provision: this.provision,\n        }, \n        {\n          headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n         }\n      })\n    } catch(e) {\n      throw errorObj(e)\n    }\n    return res.data\n  }\n\n  /**\n   * updateApplication(values, albisToken) updates an application. Warning: empty/null values will overwrite atributes to empty/null. If you wouldn't like to overwrite value to empty/null then please fill the attribute with proper data\n   * \n   * @param {Object} values - An object with application data\n   * @param {number} values.id - application number, which will be updated\n   * @param {boolean} values.contactByEmail - indicator that the leasing contract should be sent to the lessee by e-mail after approval\n   * @param {number} values.contractType - contract type\n   * @param {number} values.downPayment - down payment\n   * @param {string} values.iban - iban\n   * @param {Object} values.lessee - lessee data\n   * @param {string} values.lessee.city - lessee city\n   * @param {string} values.lessee.email - lessee email\n   * @param {number} values.lessee.legalForm - lessee legal form\n   * @param {string} values.lessee.name - lessee name\n   * @param {string} values.lessee.phoneNumber - lessee phone number\n   * @param {string} values.lessee.street - lessee street\n   * @param {string} values.lessee.zipCode - lessee zip code\n   * @param {number} values.leaseTerm - lease term (returned from getRates() method)\n   * @param {string} values.object - name of the object (80 char max)\n   * @param {number} values.paymentMethod - payment method\n   * @param {number} values.productGroup - product group\n   * @param {string} values.promotionId - promotionId (returned from getRates() if conditions matched any promotion)\n   * @param {string} values.provision - defines how much commission, retailer wants to receives for each deal. Possible values min: 0, max: 5. Default 0\n   * @param {number} values.purchasePrice - purchase price (object value)\n   * @param {string} values.receiverEndpoint - endpoint address where requests about application/documentation updates should be delivered\n   * @param {Array.<String>} values.receiverFailEmails - array of string emails where info about connection with reveiver endpoint should be delivered\n   * @param {string} values.receiverToken - a string, which can be used by a client to ensure that the notification concerns his application\n   * @param {number} values.rate - rate (returned from getRates() method)\n   * @param {string} values.reference - application reference (helper for shop employees)\n   * @param {number} values.residualValuePercent - required if contract type equals 11\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with SDK API (returned from getAlbisToken() method)\n   *\n   * @returns {ResponseUpdateApplication} response object\n   *\n   * @example\n   *\n   * Albis.updateApplication(\n   *  {\n   *   \"applicationId\": 272076,\n   *   \"contactByEmail\": true,\n   *   \"contractType\": 1,\n   *   \"downPayment\": 1000,\n   *   \"iban\": \"DE88100900001234567892\",\n   *   \"leaseTerm\": 54,\n   *   \"lessee\": {\n   *     \"name\": \"John Doe\",\n   *     \"legalForm\": 1,\n   *     \"street\": \"Fifth Avenue 10\",\n   *     \"zipCode\": \"50000\",\n   *     \"city\": \"Wroclaw\",\n   *     \"email\": \"abc@gmail.com\",\n   *     \"phoneNumber\": \"123456789\"\n   *    },\n   *   \"object\": \"Skoda\",\n   *   \"paymentMethod\": 2,\n   *   \"productGroup\": 1,\n   *   \"provision\": 2,\n   *   \"promotionId\": \"zyx\",\n   *   \"purchasePrice\": 50000,\n   *   \"rate\": 10,\n   *   \"reference\": \"abc321321\",\n   *   \"receiverEndpoint\": \"https://companyName/shop1\",\n   *   \"receiverFailEmails\": [\"abc@gmail.com\", \"abc2@gmail.com\"]\n   * },\n   * { token: '12345' })\n   */\n\n  async updateApplication(values, albisToken) {\n    const endpoint = getEndpointPath('application', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    if (values.object.length > 80) {\n      values = {...values, object: values.object.substring(0,77) + \"...\" }\n    }\n\n    try {\n      res = await axios.put(endpoint,\n        {...values,\n        applicationId: values.id}, \n        {\n          headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n         }\n      })\n    } catch(e) {\n      throw errorObj(e)\n    }\n    return res.data\n  }\n\n  /**\n   * findApplication(id, albisToken) finds application by its id\n   * @param {number} id\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseFindApplication} response - An object with application data\n   *\n   * @example\n   * Albis.findApplication(54321, { token: '12345' })\n   */\n\n  async findApplication(id, albisToken) {\n    const endpoint = getEndpointPath('application', this.apiStage, this.SDKendpoint);\n    let res = {}\n    try {\n      res = await axios.get(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n        params: {\n          applicationId: id,\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n    return res.data\n  }\n\n  /**\n   * cancelApplication(id,  albisToken) set application status to \"canceled\"\n   * @param {number} id\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseCancelApplication} response - An object with application data\n   *\n   * @example\n   * Albis.cancelApplication(54321, { token: '12345' })\n   */\n\n   async cancelApplication(id, cancelationReason, albisToken) {\n    const endpoint = getEndpointPath('application', this.apiStage, this.SDKendpoint);\n    let res = {}\n    try {\n      res = await axios.delete(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n        params: {\n          applicationId: id,\n          cancelationReason\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n    return res.data\n  }\n\n    /**\n   * getLegalForms(albisToken) get a map of all legal forms (needed for lessee data)\n   * \n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   * \n   * @returns {ResponseGetLegalForms} response object\n   *\n   * @example\n   * Albis.getLegalForms({ token: '12345' })\n   */\n\n  async getLegalForms(albisToken) {\n    const endpoint = getEndpointPath('legal-forms', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    try {\n      res = await axios.get(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n\n    return res.data\n  }\n\n   /**\n   * getContractTypes(albisToken) get an array of all contract types available for the shop user (needed for lessee data)\n   * \n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   * \n   * @returns {ResponseGetContractTypes} response object\n   *\n   * @example\n   * Albis.getContractTypes({ token: '12345' })\n   */\n\n    async getContractTypes(albisToken) {\n      const endpoint = getEndpointPath('contract-types', this.apiStage, this.SDKendpoint);\n      let res = {}\n  \n      try {\n        res = await axios.get(endpoint, {\n          headers: { \n            'content-type': 'application/json',\n            'Authorization': `Bearer ${albisToken.token}`,\n          },\n        });\n      } catch (e) {\n        throw errorObj(e)\n      }\n  \n      return res.data\n    }\n\n   /**\n   * getProductGroups(albisToken) get an array of all product groups available for the shop user (needed for lessee data)\n   * \n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   * \n   * @returns {ResponseGetProductGroups} response object\n   *\n   * @example\n   * Albis.getProductGroups({ token: '12345' })\n   */\n\n  async getProductGroups(albisToken) {\n    const endpoint = getEndpointPath('product-groups', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    try {\n      res = await axios.get(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n\n    return res.data\n  }\n\n  /**\n   * getPaymentMethods(albisToken) get an array of all payment methods available for the shop user (needed for lessee data)\n   * \n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   * \n   * @returns {ResponseGetPaymentMethods} response object\n   *\n   * @example\n   * Albis.getPaymentMethods({ token: '12345' })\n   */\n\n   async getPaymentMethods(albisToken) {\n    const endpoint = getEndpointPath('payment-methods', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    try {\n      res = await axios.get(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n\n    return res.data\n  }\n\n   /**\n   * getApplicationsStatus(albisToken) get an array of all posible application status\n   * \n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseGetApplicationsStatus} response\n   *\n   * @example\n   * Albis.getApplicationsStatus({ token: '12345' })\n   */\n\n  async getApplicationsStatus(albisToken) {\n    const endpoint = getEndpointPath('applications-status', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    try {\n      res = await axios.get(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n      });\n    } catch(e) {\n      throw errorObj(e)\n    }\n\n    return res.data\n  }\n\n   /**\n   * uploadContractDocuments(applicationId, documents, albisToken) lets to upload application documents\n   * \n   * @param {number} id - application id\n   * @param {Object[]} documents - array of objects\n   * @param {number} documents.art - document type number (possible values: 1 for Identity card, 2 for Acquired possession form, 3 for Signed contract, 4 for Direct debit authorization, 99 for miscellaneous)\n   * @param {string} documents.ext - file extension (possible values: 'pdf', 'jpg', 'jpeg', 'png')\n   * @param {string} documents.doc - string created by file encoding using base64\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseUploadContractDocuments} response object\n   *\n   * @example\n   * Albis.uploadContractDocuments(12345, [{ art: 1, ext: \"pdf\", \"doc\": \"string created by file encoding using base64\" }], { token: '12345' })\n   */\n\n  async uploadContractDocuments(id, documents, albisToken) {\n    const endpoint = getEndpointPath('contract-documents', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    try {\n      res = await axios.post(endpoint, \n        {\n          applicationId: id,\n          documents\n        },\n        {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n      });\n    } catch(e) {\n      throw errorObj(e)\n    }\n\n    return res.data;\n  }\n\n  /**\n   * getSalutations(albisToken) get an array of all posible salutations (needed for saveApplication in values.lessee.manager.salutation)\n   * \n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseGetSalutations} response object\n   *\n   * @example\n   * Albis.getSalutations({ token: '12345' })\n   */\n\n  async getSalutations(albisToken) {\n    const endpoint = getEndpointPath('salutations', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    try {\n      res = await axios.get(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n      });\n    } catch(e) {\n      throw errorObj(e)\n    }\n\n    return res.data;\n  }\n\n  /**\n   * findFrameApplication(frameApplicationId, albisToken) finds frame application - returns its data\n   * @param {number} frameApplicationId\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseFindFrameApplication} response - An object which contains a frame application data\n   *\n   * @example\n   * Albis.findFrameApplication(54321, { token: '12345' })\n   */\n\n   async findFrameApplication(frameApplicationId, albisToken) {\n    const endpoint = getEndpointPath('frame-application', this.apiStage, this.SDKendpoint);\n    let res = {}\n    try {\n      res = await axios.get(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n        params: {\n          applicationId: frameApplicationId,\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n    return res.data\n  }\n\n  /**\n   * saveFrameSubApplication(values, albisToken) saves a sub application of the indicated frame application\n   * \n   * @param {Object} values - An object with application data\n   * @param {boolean=} values.contactByEmail - indicator that the leasing contract should be sent to the lessee by e-mail after approval. TRUE/FALSE, Default:FALSE (optional)\n   * @param {number} values.contractType - contract type (result of getContractTypes() method)\n   * @param {number=} values.downPayment - down payment (optional)\n   * @param {string=} values.iban - IBAN of account to be charged with contract instalments (may be entered with spaces) (optional)\n   * @param {number} values.frameApplicationId - a frame application id \n   * @param {Object} values.lessee - lessee data\n   * @param {string} values.lessee.city - lessee city\n   * @param {string} values.lessee.email - lessee email\n   * @param {number} values.lessee.legalForm - lessee legal form\n   * @param {string} values.lessee.name - lessee name\n   * @param {string} values.lessee.phoneNumber - lessee phone number\n   * @param {string} values.lessee.street - lessee street\n   * @param {string} values.lessee.zipCode - lessee zip code\n   * @param {Object} values.lessee.manager - lessee's manager data\n   * @param {string} values.lessee.manager.birthDate - lessee's manager birth date (format required: \"YYYY-MM-DD\")\n   * @param {string} values.lessee.manager.city - lessee's manager city\n   * @param {string=} values.lessee.manager.faxNumber - lessee's manager phone number (optional)\n   * @param {string} values.lessee.manager.firstName - lessee's manager first name\n   * @param {string} values.lessee.manager.lastName - lessee's manager last name\n   * @param {string=} values.lessee.manager.phoneNumber - lessee's manager phone number (optional)\n   * @param {number} values.lessee.manager.salutation - lessee's manager salutation form (result of getSalutations() method)\n   * @param {string} values.lessee.manager.street - lessee's manager street\n   * @param {string} values.lessee.manager.zipCode - lessee's manager zip code\n   * @param {number} values.leaseTerm - lease term (returned from getRates() method)\n   * @param {string} values.object - name of the object (80 char max)\n   * @param {number} values.paymentMethod - payment method (result of getPaymentMethods() method)\n   * @param {number} values.productGroup - product group (is a part of \"credentials\". Can be assigned by Albis only)\n   * @param {string=} values.promotionId - lease term (returned from getRates() if conditions matched any promotion) (optional)\n   * @param {number} values.purchasePrice - purchase price (object value)\n   * @param {number} values.rate - rate (returned from getRates() method)\n   * @param {string=} values.reference - application reference (helper for shop employees) (optional)\n   * @param {string=} values.receiverEndpoint - endpoint address where requests about application/documentation updates should be delivered (optional)\n   * @param {Array.<String>=} values.receiverFailEmails - array of string emails where info about connection with reveiver endpoint should be delivered (optional)\n   * @param {string=} values.receiverToken - a string, which can be used by a client to ensure that the notification concerns his application (optional)\n   * @param {number=} values.residualValuePercent - required if contract type equals 11 (optional)\n   * @param {number=} values.serviceFee - required if contract type equals 7 or 12 (optional)\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with SDK API (returned from getAlbisToken() method)\n   *\n   * @returns {ResponseSaveFrameSubApplication} response - response object\n   *\n   * @example\n   *\n   * Albis.saveFrameSubApplication(\n   *  {\n   *    contactByEmail: true,\n   *    contractType: 1,\n   *    downPayment: 500,\n   *    finalPayment: 150,\n   *    iban: 'DE88100900001234567892',\n   *    frameApplicationId: 123456\n   *    lessee: {\n   *      name: 'Antonina',\n   *      street: 'Lichtenrade',\n   *      city: 'Berlin',\n   *      zipCode: '50000',\n   *      phoneNumber: '+48500000000',\n   *      email: 'abc@gmail.com',\n   *      legalForm: 1,\n   *      manager: {\n   *        salutation: 1,\n   *        firstName: 'Johanna',\n   *        lastName: 'Surname',\n   *        street: 'Piłsudskiego',\n   *        zipCode: '50000',\n   *        city: 'Hamburg',\n   *        birthDate: '1990-12-30'\n   *      },\n   *    },\n   *    leaseTerm: 12,\n   *    object: 'Fridge VW',\n   *    paymentMethod: 1,\n   *    productGroup: 1,\n   *    promotionId: 'xyz',\n   *    purchasePrice: 5000,\n   *    rate: 300,\n   *    rateWithInsurance: 323,\n   *    reference: 'abc123',\n   *    ssv: true,\n   *    receiverToken: '123abc',\n   *    receiverEndpoint: 'company.com/endpoint',\n   *    receiverFailEmails: ['abc@gmail.com', 'abc2@gmail.com']\n   * },\n   * {token: '12345'})\n   */\n\n   async saveFrameSubApplication(values, albisToken) {\n    const endpoint = getEndpointPath('frame-sub-application', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    if (values.object.length > 80) {\n      values = {...values, object: values.object.substring(0,77) + \"...\" }\n    }\n    try {\n      res = await axios.post(endpoint,\n        {\n          ...values, provision: this.provision,\n        }, \n        {\n          headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n         }\n      })\n    } catch(e) {\n      throw errorObj(e)\n    }\n    return res.data\n  }\n\n  /**\n   * findFrameSubApplications(frameApplicationId, albisToken) finds all sub applications of the indicated frame application\n   * @param {number} frameApplicationId\n   * @param {boolean} showExternalStatus - indicates, if applicationStatusTxt with a description of received application status should be attached to the result set\n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseFindFrameSubApplications} response - An object which contains an array in the result attribute of sub applications belonging to the frame application\n   *\n   * @example\n   * Albis.findFrameSubApplications(54321, { token: '12345' })\n   */\n\n   async findFrameSubApplications(frameApplicationId, showExternalStatus, albisToken) {\n    const endpoint = getEndpointPath('frame-sub-applications', this.apiStage, this.SDKendpoint);\n    let res = {}\n    try {\n      res = await axios.get(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n        params: {\n          applicationId: frameApplicationId,\n          showExternalStatus\n        },\n      });\n    } catch (e) {\n      throw errorObj(e)\n    }\n    return res.data\n  }\n\n  /**\n   * logout(albisToken) logs the user out\n   * \n   * @param {Object} albisToken - object with Albis token, which lets to communicate with Albis API\n   *\n   * @returns {ResponseLogout} response object\n   *\n   * @example\n   * Albis.logout({ token: '12345' })\n   */\n\n  async logout(albisToken) {\n    const endpoint = getEndpointPath('token', this.apiStage, this.SDKendpoint);\n    let res = {}\n\n    try {\n      res = await axios.delete(endpoint, {\n        headers: { \n          'content-type': 'application/json',\n          'Authorization': `Bearer ${albisToken.token}`,\n        },\n      });\n    } catch(e) {\n      throw errorObj(e)\n    }\n\n    return res.data;\n  }\n\n}\n\nexport default Albis;\n\n/**\n * @typedef {Object} ResponseGetAlbisToken\n * @property {string} albisToken.token - token used for user authorisation\n * @property {string} albisToken.scope - shows users access\n * @property {string} albisToken.token_type - token type\n * @property {number} albisToken.expires_in_Auth0 - how long the token will be valid (number of seconds)\n * @property {number} albisToken.expires - how long the token will be valid (Unix time stamp)\n */\n\n\n/**\n * @typedef {Object} ResponseAlbisPing\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {string} response.result - 'pong'\n */\n\n/**\n * @typedef {Object} ResponseAlbisEcho\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {string} response.result - data input string (or default \"Test\")\n */\n\n /**\n * @typedef {Object} ResponseGetContractDocuments\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {string} response.result - base64 string (i.e. a PDF file)\n */\n\n /**\n * @typedef {Object} ResponseChangePassword\n * @property {string} response.albisPassChangeStatus.id - json rpc lib id\n * @property {string} response.albisPassChangeStatus.jsonrpc - json rpc version number (\"2.0\")\n * @property {string} response.albisPassChangeStatus.result - null\n * @property {string} response.auth0PassChangeStatus.created_at - date when the user has been created\n * @property {string} response.auth0PassChangeStatus.email - user's email (same as login)\n * @property {boolean} response.auth0PassChangeStatus.email_verified - is email verified\n * @property {Object} response.auth0PassChangeStatus.identities - object with description of user connection\n * @property {boolean} response.auth0PassChangeStatus.name - user login name (same as email)\n * @property {boolean} response.auth0PassChangeStatus.nickname - user nickname name (same as email without the domain ending)\n * @property {string} response.auth0PassChangeStatus.picture - user picture URL (png)\n * @property {string} response.auth0PassChangeStatus.updated_at - date of the last update\n * @property {string} response.auth0PassChangeStatus.user_id - auth0 user id\n * @property {string} response.auth0PassChangeStatus.last_password_reset - date of the last password reset\n * @property {string} response.auth0PassChangeStatus.last_ip - ip used for the last connection\n * @property {string} response.auth0PassChangeStatus.last_login - date of the last login\n * @property {number} response.auth0PassChangeStatus.logins_count - number of total logins of this user\n */\n\n /**\n * @typedef {Object} ResponseGetRates\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {Object[]} response.result - array of objects i.e.\n *  {\n *    leaseTerm: 18,\n *    rate: 188.8,\n *    rateWithInsurance: 195.7,\n *    total: 3522.6,\n *    totalRate: 185.92,\n *    costPerPage: 0.062\n *  }\n */\n\n /**\n * @typedef {Object} ResponseGetFrameRates\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {Object[]} response.result - array of objects i.e.\n *  {\n *    leaseTerm: 18,\n *    rate: 188.8,\n *    rateWithInsurance: 195.7,\n *    costPerPage: 0.067,\n *    finalPayment: 1073.11,\n *    total: 6982.2,\n *    totalRate: 182.95\n *  }\n */\n\n /**\n * @typedef {Object} ResponseSaveApplication\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {number} response.result - a unique number of the application\n * @property {string} response.receiverToken - receiver token (if used in input params), a string, which can be used by a client to ensure that the notification concerns his application\n */\n\n /**\n * @typedef {Object} ResponseUpdateApplication\n * @property {null} response.result - null\n * @property {string} response.jsonrpc - \"2.0\"\n * @property {number} response.id - json rpc lib id\n * @property {string} response.receiverToken - receiver token (if used in input params), a string, which can be used by a client to ensure that the notification concerns his application\n */\n\n/**\n * @typedef {Object} ResponseFindApplication\n * @property {string} response.jsonrpc - \"2.0\"\n * @property {string} response.id - json rpc lib id\n * @property {Object} response.result - object with application data\n * @property {number} response.result.applicationId - application id i.e. 54321\n * @property {number} response.result.applicationStatus - application status number i.e. 1150 (you can compare the result with getApplicationsStatus method)\n * @property {string} response.result.applicationStatusDesc - application status description i.e. 'in Bearbeitung' (you can compare the result with getApplicationsStatus method)\n * @property {string} response.result.applicationReceptionDate - when application data were received i.e. '2020-12-21 09:04:11'\n * @property {string} response.result.bankName - bank name, which will cover the transation i.e. 'Berliner Volksbank'\n * @property {string} response.result.bankIdentifierCode - bank identifier code i.e. 'BEVODEBBXYZ'\n * @property {Object[]} response.result.contractDocuments - list of missing or incorrect contract documents. Array with objects, i.e.\n   * {\n   *    errorNumber: 1,\n   *    errorText: 'Id document is needed to proceed the application',\n   *    value: 'some more information about the document error',\n   *    documentReceptionDate: '2021-02-20',\n   *    documentType: 'id'\n   * }\n * @property {number} response.result.contractType - contract type i.e. 1 (you can compare the result with getContractTypes method)\n * @property {string[]} response.result.decisionDocuments - list of missing documents for the decision i.e. ['id']\n * @property {number} response.result.downPayment - down payment id i.e. 500\n * @property {number} response.result.finalPayment - possible final payment if the term is shortened. This field is only available to be filled if the contract is cancellable id i.e. 2831.08\n * @property {string} response.result.iban - IBAN of account to be charged with contract instalments i.e. 'DE88100900001234567892'\n * @property {boolean} response.result.insurance - is insurance i.e. true\n * @property {boolean} response.result.isContactByEmail - indicator that the leasing contract should be sent to the lessee by e-mail after approval i.e. true\n * @property {boolean} response.result.isLesseeEmailContact - did lessee agreed to receive an email i.e. true\n * @property {number} response.result.leaseTerm - term of lease in months i.e. 54\n * @property {Object} response.result.lessee - object with lessee data\n * @property {string} response.result.lessee.city - lessee city i.e. 'New York'\n * @property {string} response.result.lessee.email - lessee email i.e. 'johndoe@gmail.com'\n * @property {string} response.result.lessee.fax - lessee fax i.e. '0123 123 123'\n * @property {Object} response.result.lessee.manager - lessee manager data\n * @property {string} response.result.lessee.manager.birthDate - lessee manager birth date, i.e. '1960-12-24' (format YYYY-MM-DD)\n * @property {string} response.result.lessee.manager.city - lessee manager city, i.e. 'New York'\n * @property {string} response.result.lessee.manager.firstName - lessee manager first name, i.e. 'Susane'\n * @property {string} response.result.lessee.manager.fullName - lessee manager full name, i.e. 'Susane Cooper'\n * @property {string} response.result.lessee.manager.lastName - lessee manager last name, i.e. 'Cooper'\n * @property {number} response.result.lessee.manager.salutation - lessee manager salutation, i.e. 2 (you can compare the result with getSalutations method)\n * @property {string} response.result.lessee.manager.salutationDesc - lessee manager salutation description, i.e. 'Frau' (you can compare the result with getSalutations method)\n * @property {string} response.result.lessee.manager.street - lessee manager street, i.e. 'Fifth Avenue'\n * @property {string} response.result.lessee.manager.zipCode - lessee manager zip code, i.e. '50123'\n * @property {string} response.result.lessee.mobileNumber - lessee mobile number, i.e. '+49 543 123 123'\n * @property {string} response.result.lessee.name - lessee name, i.e. 'John Doe'\n * @property {number} response.result.lessee.legalForm - lessee legal form, i.e. 1 (you can compare the result with getLegalFroms method)\n * @property {string} response.result.lessee.phoneNumber - lessee phone number, i.e. '030 1234 1234'\n * @property {string} response.result.lessee.street - lessee street, i.e. 'Fifth Avenue'\n * @property {string} response.result.lessee.zipCode - lessee zip code, i.e. '50125'\n * @property {string} response.result.object - designation of object of lease i.e. 'Fridge Samsung model XYZ'\n * @property {string} response.result.paymentMethod - payment method i.e. 2 (you can compare the result with getPaymentMethods method)\n * @property {string} response.result.productGroup - product group of object of lease i.e. 1\n * @property {string} response.result.promotionId - promotionId (if conditions matched any promotion) i.e. 'xyz'\n * @property {number} response.result.provision - commission, i.e. 4.5\n * @property {number} response.result.purchasePrice - purchase price for object of lease, i.e. 5000\n * @property {number} response.result.rate - monthly leasing rate i.e. 117.87\n * @property {string} response.result.receiverEndpoint - endpoint address where requests about application/documentation updates should be delivered i.e. 'https://companyName.com/shop1'\n * @property {string[]} response.result.receiverFailEmails - array of string emails where info about connection with reveiver endpoint should be delivered i.e. ['emailToBeNotified@gmail.com']\n * @property {string} response.result.receiverToken - a string, which can be used by a client to ensure that the notification concerns his application i.e. 'xyz123'\n * @property {string} response.result.reference - application reference (helper for shop employees) i.e. '123abc'\n * @property {number} response.result.residualValue - residual value i.e. 300 (0 if contract type different than 2)\n * @property {number} response.result.residualValuePercent - residual value percent i.e. 3.0 (null if contract type different than 2)\n * @property {boolean} response.result.saleAndLeaseBack - is application of type sale and lease back i.e. true\n * @property {number} response.result.salesmanId - salesman id which created the application i.e. 12345\n * @property {number} response.result.terminationTerm - when the lease is possible to terminate i.e. 30\n */\n\n /**\n * @typedef {Object} ResponseCancelApplication\n * @property {null} response.result - null\n * @property {string} response.jsonrpc - \"2.0\"\n * @property {number} response.id - json rpc lib id\n */\n\n /**\n * @typedef {Object} ResponseGetLegalForms\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {Object[]} response.result - array of objects like:\n * {\n *   id: 1,\n *   text: 'GmbH'\n * }\n */\n\n /**\n * @typedef {Object} ResponseGetContractTypes\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {Object[]} response.result - array of objects like:\n * {\n *   id: 1,\n     description: \"VA-Leasingvertrag\",\n     abbreviation: \"VA\"\n * }\n */\n\n /**\n * @typedef {Object} ResponseGetProductGroups\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {Object[]} response.result - array of objects like:\n * {\n *   id: 1,\n     maxPossibleTerm: 30,\n     maxPossibleTermAlbis: 36,\n     minPossibleTerm: 18,\n     minPossibleTermAlbis: 18,\n     description: \"EDV (Hard- und Software)\",\n     monthOfCancellation: 30,\n     position: 1\n * }\n */\n\n /**\n * @typedef {Object} ResponseGetPaymentMethods\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {Object[]} response.result - array of objects like:\n * {\n *   id: 1,\n     description: \"quartalsweise\"\n * }\n */\n\n /**\n * @typedef {Object} ResponseGetApplicationsStatus\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {string[]} response.result - array of strings with names of applications status\n */\n\n /**\n * @typedef {Object} ResponseUploadContractDocuments\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {string} response.result - an approval message\n */ \n\n /**\n * @typedef {Object} ResponseGetSalutations\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {Object[]} response.result - array with objects like:\n * {\n *   id: 1,\n *   text: 'Herr'\n * }\n */ \n\n/**\n * @typedef {Object} ResponseFindFrameApplication\n * @property {string} response.jsonrpc - \"2.0\"\n * @property {string} response.id - json rpc lib id\n * @property {Object} response.result - object with application data\n * @property {number} response.result.applicationId - application id i.e. 54321\n * @property {number} response.result.framePurchasePriceSum - a sum of all purchase aldready made under frame application\n * @property {number} response.result.frameRestSum - remaining purchase value under frame application\n * @property {Object[]} response.result.contractTypes - a list of contract types, which could be used. Array with objects, i.e.\n   * {\n   *    contractType: 1,\n   *    contractTypeDesc: 'VA-Leasingvertrag',\n   * }\n * @property {number} response.result.lessee - object with lessee data\n * @property {string} response.result.lessee.salutation - lessee salutation i.e. \"Herr\"\n * @property {string} response.result.lessee.title - lessee title i.e. \"POSTDOC\"\n * @property {string} response.result.lessee.firstName - lessee first name i.e. \"Marion\"\n * @property {string} response.result.lessee.lastName - lessee last name i.e. \"Smith\"\n * @property {string} response.result.lessee.street - lessee street, i.e. 'Fifth Avenue'\n * @property {string} response.result.lessee.zipCode - lessee zip code, i.e. '50125'\n * @property {string} response.result.lessee.city - lessee city i.e. 'New York'\n * @property {string} response.result.lessee.phoneNumber - lessee phone number, i.e. '030 1234 1234'\n * @property {string} response.result.lessee.mobileNumber - lessee mobile number, i.e. '+49 543 123 123'\n * @property {string} response.result.lessee.email - lessee email i.e. 'johndoe@gmail.com'\n * @property {number} response.result.lessee.birthDate - lessee birth date i.e. 1990-03-03 00:00:00\n */\n\n /**\n * @typedef {Object} ResponseSaveFrameSubApplication\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {number} response.result - a unique number of the sub application\n * @property {string} response.receiverToken - receiver token (if used in input params), a string, which can be used by a client to ensure that the notification concerns his application\n  */\n\n /**\n  * @typedef {Object} ResponseFindFrameSubApplications\n  * @property {string} response.id - json rpc lib id\n  * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n  * @property {Object[]} response.result - array with objects like:\n  * {\n  *   subApplication: 987654,\n      applicationReceptionDate: \"2021-06-01\",\n      applicationStatus: 123,\n      lastUpdate: \"2021-05-01\",\n      object: \"Fridge\",\n      purchasePrice: 30000,\n      leaseTerm: 36,\n      rate\": 35.50,\n      contractType\": 1,\n      contractTypeTxt: \"VA-Leasingvertrag\",\n      terminationTerm: 12,\n      isInsurance: false,\n      hid400: 123456, - salesman id number\n      serviceFee: 0,\n      retailer: \"EDEKABANK AG\",\n      user: \"Kris Henkel\",\n      applicationStatusTxt: \"Antrag genehmigt\"}\n  */\n\n /**\n * @typedef {Object} ResponseLogout\n * @property {string} response.id - json rpc lib id\n * @property {string} response.jsonrpc - json rpc version number (\"2.0\")\n * @property {null} response.result\n */ ","module.exports = __WEBPACK_EXTERNAL_MODULE_axios__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}